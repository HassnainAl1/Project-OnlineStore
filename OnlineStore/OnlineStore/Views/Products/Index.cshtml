@*@model IEnumerable<OnlineStore.Models.Product>*@
@using PagedList.Mvc;
@model PagedList.IPagedList<OnlineStore.Models.Product>

@{
    ViewBag.Title = "Products";
}

<div class="products">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="filters">
                    <ul>
                        <li class="active" data-filter="*">All Products</li>
                        <li data-filter=".des">Featured</li>
                        <li data-filter=".dev">Flash Deals</li>
                        <li data-filter=".gra">Last Minute</li>
                    </ul>
                </div>
            </div>
            <div class="col-md-12">
                <div class="filters-content">
                    <div class="row grid">
                        @foreach (var item in Model)
                        {
                            <div class="col-lg-4 col-md-4 all des" style="position: absolute; left: 0%; top: 0px;">
                                <div class="product-item">
                                    <a href="@Url.Action("Details","Products",new { id = item.Id})">
                                        <img class="img-fluid " style="height: 270px;width:220px " src="@(string.IsNullOrEmpty(item.PImage) ? Url.Content("~/Images/DPI.png") : Url.Content("~/" + item.PImage))" alt="">
                                    </a>
                                    <div class="down-content">
                                        <a href="@Url.Action("Details","Products",new { id = item.Id})">
                                            <h4 style="color:forestgreen;cursor:pointer">@item.PName</h4>
                                        </a>
                                        <h6>$ @item.SellPrice</h6>
                                        <p>@item.Description</p>
                                        @if (User.Identity.IsAuthenticated)
                                        {<div>
                                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { onclick = "return confirm('Are sure wants to delete?');" })

                                            </div>
                                        }
                                        <span>Reviews (12)</span>
                                    </div>
                                </div>
                            </div>
                        }


                    </div>
                </div>
            </div>
            <div class="col-md-12">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }), new PagedListRenderOptions
                {

               UlElementClasses = new string[] { "pages" }

           })
                Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Products

            </div>
        </div>
    </div>
</div>
