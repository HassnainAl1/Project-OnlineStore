@using System.Security.Claims
@using OnlineStore.Helpers
<!DOCTYPE html>
<html lang="en">
@*@using OnlineStore.Models.WebModels
    @model CartViewModels*@
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link href="https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,600,700,800,900&display=swap" rel="stylesheet">

    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.6.2/js/bootstrap-select.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.6.2/css/bootstrap-select.min.css" rel="stylesheet" />*@


    <title>Sony Mart | @ViewBag.Title</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @RenderSection("styles", required: false)
</head>

<body>

    <!-- ***** Preloader Start ***** -->
    <div id="preloader">
        <div class="jumper">
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>
    <!-- ***** Preloader End ***** -->
    <!-- Header -->
    @Html.Partial("_Header")
    <!-- Page Content -->
    <!-- Banner Starts Here -->
    <div class="banner header-text">
        <div class="owl-banner owl-carousel">
            <div class="banner-item-01">
                <div class="text-content">
                    <h4>@Resources.BEST_OFFER</h4>
                    <h2>@Resources.NEW_ARRIVALS_ON_SALE</h2>
                </div>
            </div>
            <div class="banner-item-02">
                <div class="text-content">
                    <h4>@Resources.FLASH_DEALS</h4>
                    <h2>@Resources.GET_YOUR_BEST_PRODUCTS</h2>
                </div>
            </div>
            <div class="banner-item-03">
                <div class="text-content">
                    <h4>@Resources.LAST_MINUTE</h4>
                    <h2>@Resources.GRAB_LAST_MINUTE_DEALS</h2>
                </div>
            </div>
        </div>
    </div>
    <!-- Banner Ends Here -->

    @RenderBody()


    @Html.Partial("_Footer");
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    @{
        var currentRole = User.Identity.GetClaimValue(ClaimTypes.Role);
    }
    <script language="text/Javascript">

        cleared[0] = cleared[1] = cleared[2] = 0; //set a cleared flag for each field
        function clearField(t) {                   //declaring the array outside of the
            if (!cleared[t.id]) {                      // function makes it static and global
                cleared[t.id] = 1;  // you could use true and false, but that's more typing
                t.value = '';         // with more chance of typos
                t.style.color = '#fff';
            }
        }

    </script>
    <script>
        function getProducts() {
            $.ajax({
                url: "/products/checkout",
                method: "GET",
                success: function (response) {
                    $(".cart-S").empty();
                    $(".cart-S").append(response);

                    $.each($(".xBtn"), function () {
                        var crorssButton = $(this);
                        crorssButton.click(function () {

                            var oldoldv = $(".icon-button__badge").text();
                            var productId = $(this).attr('data-idd');
                            var quantity = $(this).parent().parent().find(".qty").attr("value");
                            quantity = Number(quantity);
                            var oldProducts = $.cookie('CartProducts');
                            oldProducts = oldProducts.split("-");
                            var newId = [];
                            $.each(oldProducts, function (index, value) {
                                if (Number(value) > 0) {
                                    if (Number(productId) !== Number(value) && $.inArray(value, newId) === -1) {
                                        newId.push(value);
                                    }
                                }
                            });

                            newId = newId.join("-");
                            $.cookie('CartProducts', newId, { expires: 10, path: '/' });
                            $(this).closest("tr").remove();
                            event.stopPropagation();
                            var nCount = Number(oldoldv) - Number(quantity);
                            if (nCount > 0) {
                                $(".icon-button__badge").text(nCount);
                            } else {
                                $(".icon-button__badge").remove();
                            }

                            var oldBill = $("#Bill").text();
                            var p = $(this).siblings(".Total-Price__View").text();
                            var toTalBill = Number(oldBill) - Number(p);
                            var TnPrice = toTalBill.toFixed(2);
                            $("#Bill").text(TnPrice);

                            if (toTalBill == 0) {
                                $(".cart-S > .dropdown > .dropdown-menu").hide();
                            }


                        });



                    });

                    $.each($(".plus,.minus"), function () {
                        $(this).click(function () {
                            if ($(this).hasClass("plus")) {
                                var val = $(this).siblings(".qty").val();
                                var vall = Number(val) + 1;
                                $(this).siblings(".qty").attr("value", vall);
                                var oldVal = $(".icon-button__badge").text();
                                var newVal = Number(oldVal) + 1;
                                var oldVal = $(".icon-button__badge").text(newVal);
                                var val = $(this).siblings(".qty").val();

                                var productId = $(this).siblings(".qty").attr('data-id');
                                updateCookie(productId);

                                var productPrice = $(this).siblings(".qty").attr('data-price');
                                var productPriceF = Number(productPrice) * Number(val);
                                var nPrice = productPriceF.toFixed(2);

                                $($(this).parent().parent().siblings()[3]).find(".Total-Price__View").text(nPrice);

                                var oldBill = $("#Bill").text();
                                var toTalBill = Number(oldBill) + Number(productPrice);
                                var TnPrice = toTalBill.toFixed(2);
                                $("#Bill").text(TnPrice);

                            }
                            else {
                                var val = $(this).siblings(".qty").val();
                                val = Number(val);
                                if (val > 1) {
                                    var val = $(this).siblings(".qty").val();
                                    var vall = Number(val) - 1;
                                    $(this).siblings(".qty").attr("value", vall);
                                    var oldVal = $(".icon-button__badge").text();
                                    var newVal = Number(oldVal) - 1;
                                    var oldVal = $(".icon-button__badge").text(newVal);
                                    var val = $(this).siblings(".qty").val();

                                    var productId = $(this).siblings(".qty").attr('data-id');
                                    RemoveCookie(productId);

                                    var totalP = $($(this).parent().parent().siblings()[3]).find(".Total-Price__View").text();

                                    var productPrice = $(this).siblings(".qty").attr('data-price');
                                    productPriceN = Number(totalP) - Number(productPrice);
                                    var nPrice = productPriceN.toFixed(2);

                                    $($(this).parent().parent().siblings()[3]).find(".Total-Price__View").text(nPrice);

                                    var oldBill = $("#Bill").text();
                                    var toTalBill = Number(oldBill) - Number(productPrice);
                                    var TnPrice = toTalBill.toFixed(2);
                                    $("#Bill").text(TnPrice);

                                }
                                else {
                                    var val = $(this).siblings(".qty").prop("disabled", true);
                                }
                            }
                        });
                    });

                    $("#Checkout-P-Btn").click(function () {

                        if ('@currentRole'.toLowerCase() === 'user') {
                            window.location.href = "/Products/CheckoutProcedure";
                        }
                        else {
                            window.location.href = "/Account/Login?returnUrl=/Products/CheckoutProcedure";
                        }

                    });


                    //
                }
            });
        }

        getProducts();

        function updateCookie(productId) {
            var oldProducts1 = $.cookie('CartProducts');
            if (typeof oldProducts1 === "undefined") {
                oldProducts1 = "";
            }
            oldProducts1 = oldProducts1 + "-" + productId;
            $.cookie('CartProducts', oldProducts1, { expires: 10, path: '/' });
        }

        function RemoveCookie(productId) {
            
            var quantity = "1";
            quantity = Number(quantity);
            var oldProducts = $.cookie('CartProducts');
            oldProducts = oldProducts.split("-");
            var newId = [];
            $.each(oldProducts, function (index, value) {
                if (Number(value) > 0) {
                    if (Number(productId) !== Number(value) && $.inArray(value, newId) === -1) {
                        newId.push(value);
                    }
                }
            });

            newId = newId.join("-");
            $.cookie('CartProducts', newId, { expires: 10, path: '/' });
        }


        $(".cartbtn").click(function () {
            var productId = $(this).attr('data-id');
            updateCookie(productId);

            var countv = $(".icon-button__badge").text();
            countv = Number(countv);
            if ($(".icon-button__badge").length > 0) {
                $(".icon-button__badge").text(countv + 1);
            } else {
                var spanBadge = '<span class="icon-button__badge">1</span>';
                $(".cart-S").append(spanBadge);
            }
            getProducts();
        });

        $(document).on('click', 'cart-S > .dropdown', function (e) {
            e.stopPropagation();
        });

        $(function () {
            //$('.selectpicker').selectpicker();
        });

    </script>
</body>

</html>

